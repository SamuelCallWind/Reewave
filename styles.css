/* * {
    border: solid red 2px;
} */

body {
    background-color: rgba(249, 249, 249, 0.816);
    margin: 0;
}
.logo {
    width: 60px;
    height: 35px;
    margin-left: 10px;
}
a {
    text-decoration: none;
    color: inherit;
}


header {
    height: 100px;
    width: 100%;
    background: linear-gradient(rgba(222, 205, 205, 0.95) 10%, rgb(245, 232, 210) 70%, rgba(249, 249, 249, 0.816) 100%);
    display: flex;
    justify-content: space-between;
    align-items: center;
    color: black;
    box-shadow: 0 10px 100px -100px rgba(0, 0, 0, 0.5);
    text-shadow: 1px 0  orange;
}
.linksTop {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 10vw;
    list-style: none;
}

.sideBarButton {
    max-width: 50px;
    display: flex;
    flex-direction: column;
    gap: 5px;
    margin-right: 5vw;
    transition: 0.2s ease-in-out;
    cursor: pointer; 
}
.sideBarButton:hover {
    border-radius: 5px;
}
.oneBar {
    width: 2em;
    background-color: rgb(250, 162, 46);
    height: 0.8vh;
    border-radius: 5px; 
}
.sideBarLi:hover .animate360 {
    animation-play-state: running;
}
.sideBarLi:not(:hover) .animate360 {
    animation: reverseRotate360 1s alternate;
}
.sideBarLi:hover .animate360:nth-child(2) {
    animation-delay: 0.05s;
}
.sideBarLi:hover .animate360:nth-child(3) {
    animation-delay: 0.1s;
}
/* Making each of the bar rotate when hovered with a small delay 
to look smoother. Need to implement the return if user stops hovering */
.animate360 {
    animation: rotate360 0.8s alternate; 
    animation-play-state: paused;
}
@keyframes rotate360 {
    from {transform: rotate(0deg); }
    to {transform: rotate(360deg); }
}
@keyframes reverseRotate360 {
    from {transform: rotate(360deg); }
    to {transform: rotate(0deg); }
}
.sideBar {
    position: fixed;
    top: 0;
    right: 0;
    z-index: 1001;
    height: 100vh;
    width: 0%;
    background: linear-gradient(rgba(249, 249, 249, 0.950), rgb(245, 236, 210));
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
    transition: width 0.5s ease-in-out;
}
.arrow {
    width: 10%;
    position: absolute;
    top: 1%;
    left: 3%;
    transition: filter 0.1s ease-in-out;
    cursor: pointer;
}
.arrow:hover {
    filter: invert(0.5);
}

.calendar {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
}

.displayMonthDay {
    margin-left: 4vw;
    font-size: 30px;
    align-self: left;
}

.calendarGrid {
    margin: 2vw;
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(7, minmax(0, 200px));
    grid-template-rows: 12vh 12vh 12vh 12vh 12vh;
    
}

.boxDay {
    position: relative;
    background: linear-gradient(rgba(65, 113, 132, 0.739), rgba(11, 108, 147, 0.59));
    height: 1fr;
    width: 1fr;
    border: solid black 2px;
    border-radius: 3px;
    color: rgb(255, 255, 255);
    font-size: 2em;
    transition: .2s ease-in-out;
    cursor: pointer;
    user-select: none;
    box-shadow: 3px 3px 5px rgb(8, 23, 33);
}
.boxDay:hover {
    color: black;
    background-color: rgba(240, 248, 255, 0.717);
    text-shadow: 1px 2px rgb(114, 114, 114);
    animation: shake 0.1s 2;
}
.cornerBox{
    position: absolute;
    top: 5%;
    right: 5%;
    background-color: none;
    width: 2.5vh;
    height: 2.5vh;
    opacity: 0.5;
    transition: opacity 0.3s ease-in-out;
}
.cornerBox:hover {
    opacity: 1;
}
.checkCornerBox {
    position: absolute;
    top: 5%;
    background-color: red;
    width: 10%;
    border-radius: 50px;
}
.cornerBox:hover .checkCornerBox:nth-child(odd) {
    right: 0;
    animation: crossAnimation 0.8s ease-in-out forwards;
    transform-origin: top right;
    transform: rotate(45deg);
}
.cornerBox:hover .checkCornerBox:nth-child(even) { 
    left: 0;
    animation: crossAnimationNegative 0.8s ease-in-out forwards;
    animation-delay: 0.2s;
    transform-origin: top left;
    transform: rotate(-45deg);
}
@keyframes crossAnimation {
    0% {
        height: 0;
    }
    100% {
        height: 130%;
    }
}
@keyframes crossAnimationNegative {
    0% {
        height: 0;
    }
    100% {
        height: 130%;
    }
}

.sideBarLi {
    list-style: none;
}

.dayLine {
    position: absolute;
    left: 5%;
    bottom: 20%;
    width: 88.9%;
    background-color: white;
    height: 0.5%;
}
.verticalLine {
    position: absolute;
    bottom: 17.49%;
    height: 3%;
    width: 0.2%;
    background-color: white;
}
.hourVerticalLine {
    position: absolute;
    bottom: 11%;
    color: white;
    font-size: 1vw;
}
.fade {
    opacity: 0;
    transition: opacity 0.3s ease-in-out;
}

.dayBoxGrow {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -45%);
    display: flex;
    flex-wrap: wrap;
    width: 85%;
    min-height: 80%;
    box-shadow: 2px 2px 5px 0 black;
    background-color: rgba(39, 41, 48, 0.995);
    z-index: 1000;
    /* opacity: 0;
    animation: fadeIn 1s ; */
}
.closeButton {
    position: absolute;
    top: 10px;
    right: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    padding-bottom: 5px;
    padding-right: 1px;
    font-size: 30px;
    cursor: pointer;
    background-color: #630000c3; 
    color: white;
    width: 35px;
    height: 30px;
    border-radius: 50%; 
    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.26);
}
.switchButtonOne, .switchButtonTwo, .saveChanges {
    position: absolute;
    bottom: 3%;
    width: 10vw;
    max-width: 200px;
    height: 3vh;
    border-radius: 2px;
    -webkit-transform: skew(-20deg); 
    -moz-transform: skew(-20deg); 
    -o-transform: skew(-20deg);
    transform: skew(-20deg);
    user-select: none;
    transition: 0.5s ease-in-out;
    overflow: hidden;
    font-size: 2vh;
    text-align: center;
    line-height: 1.3em;
}
.switchButtonOne:hover, .switchButtonTwo:hover,.saveChanges:hover {
    animation: shakeSwitches 0.1s 2;
}


.switchButtonTwo {
    background-color: rgba(7, 14, 24, 0.816);
    left: 18%;
    color: white;
}
.switchButtonOne {
    left: 5%;
    background: linear-gradient(rgba(255, 166, 0, 0.848), rgb(187, 121, 0));
    color: white;
}

.saveChanges {
    background-color: rgba(255, 255, 255, 0.816);
    right: 10%;
    font-size: 1em;
}
.saveMessage {
    position: absolute;
    bottom: 1%;
    right: 25%;
    display: flex;
    flex-wrap: wrap;
    font-size: 100%;
    border: solid rgb(161, 255, 161) 2px;
    background-color: green;
    max-width: auto;
    height: 5%;
    text-align: center;
    line-height: 25px;
    border-radius: 5px;
}

.addActivityButton {
    position: absolute;
    top: 15%;
    left: 2%;
    min-width: 40px;
    min-height: 20px;
}
.addNewMessage {
    position: absolute;
    top: 15%;
    right: 50%;
    display: flex;
    flex-wrap: wrap;
    font-size: 100%;
    border: solid rgb(161, 255, 161) 2px;
    background-color: green;
    max-width: auto;
    height: 5%;
    text-align: center;
    line-height: 25px;
    border-radius: 5px;
    transition: all 0.5s ease-in-out;
}

.boxActivity {
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    animation: growing 1s alternate;
}
@keyframes growing {
    0% {
        height: 1px;
        width: 1px;
        margin-top: 500px;
    }
    60% {
        
    }
}

#durationActivity, #selectTimeActivity, #inputActivity {
    width: 12vw;
    font-size: 0.8em;
    min-height: 15px;
    position: absolute;
    top: 23%;
}
#durationActivity {
    left: 2%;
}
#selectTimeActivity {
    left: 20%;
}
#inputActivity {
    left: 40%;
}

.mainDivLabelActivity {
    opacity: 1;
    transition: opacity 0.5s ease-in-out;
    display: flex;
    flex-direction: column;
}
.pairDivLabelActivity {
    position: absolute;
    left: 60%;
}

.labelActivity {
    font-size: 2.3vh;
}

.dayBoxGrow h1 {
    color: white;
    margin-left: 1em;
}

.errorMessage {
    font-size: 1em;
    border: solid rgba(123, 0, 0, 0.702);
    background-color: rgba(255, 186, 186, 0.702);
    color: black;
    max-width: 60%;
    height: auto;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 10px;
    padding: 5px;
}

#inputActivity, #durationActivity, #selectTimeActivity, .pairDivLabelActivity {
    opacity: 0;
    transition: opacity 0.5s ease-in-out;

}

@media (max-width: 600px) {
    .calendarGrid {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
    }
    .boxDay {
        min-width: 200px;
        max-width: 200px;
        min-height: 100px;
    }
    .errorMessage {
        font-size: 2.5vw;
    }
}
@media (max-width: 485px) {
    .calendarGrid {
        justify-content: center;
    }
}
@media (max-width: 225px) {
    .boxDay {
        width: 100px;
        min-width: 10px;
    }
    .logo {
        margin-left: 2px;
    }
    .linksTop {
        gap: 3vw;
        font-size: 12px;
        flex-direction: column;
    }
    .sideBarButton {
        margin-right: 0;
    }
    header {
        height: auto;
    }
}
@media (max-width: 415px) {
    
    .linksTop {
        gap: 3vw;
        font-size: 10px;
    }
    .sideBarButton {
        margin-right: 0;
    }
}

@keyframes shake {
    0% { transform: translate(0, 0); }
    25% { transform: translate(-1px, 0); }
    50% { transform: translate(0, 0); }
    75% { transform: translate(1px, 0); }
    100% { transform: translate(0, 0); }
}
@keyframes shakeSwitches {
    0% { transform: skew(-20deg) translate(0, 0); }
    25% { transform: skew(-20deg) translate(-1px, 0); }
    50% { transform: skew(-20deg) translate(0, 0); }
    75% { transform: skew(-20deg) translate(1px, 0); }
    100% { transform: skew(-20deg) translate(0, 0); }
}

@keyframes fadeIn {
    from {opacity: 0; }
    to {opacity: 1; }
}